generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model user {
  id        Int       @id @default(autoincrement())
  // user_id uuid references auth.users on delete cascade, supabase上でauth.usersとリレーションする必要あり。
  email String @db.VarChar @unique
  username String? @db.VarChar @unique
  createdAt DateTime  @default(now()) @db.Timestamptz(6)
  updatedAt DateTime?  @db.Timestamptz(6)
  projects  usersOnProjects[]
}

model project {
  id        Int       @id @default(autoincrement())
  name      String    @db.VarChar
  createdAt DateTime  @default(now()) @db.Timestamptz(6)
  updatedAt DateTime  @updatedAt @db.Timestamptz(6)
  users usersOnProjects[]
  diagrams  diagram[]
}

model usersOnProjects {
  user       user     @relation(fields: [userId], references: [id])
  userId     Int // relation scalar field (used in the `@relation` attribute above)
  project   project @relation(fields: [projectId], references: [id])
  projectId Int // relation scalar field (used in the `@relation` attribute above)
  assignedAt DateTime @default(now())
  assignedBy String @db.VarChar

  @@id([userId, projectId])
}

model diagram {
  id        Int      @id @default(autoincrement())
  project   project  @relation(fields: [projectId], references: [id])
  projectId Int
  name      String @db.VarChar
  content   String? @db.Text
  createdAt DateTime @default(now()) @db.Timestamptz(6)
  updatedAt DateTime @default(now()) @updatedAt @db.Timestamptz(6)
}
